/* TCSS 305 - Spring 2013
 * Tetris Project
 * InfoDisplay class
 */

package view;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.Observable;
import java.util.Observer;

import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JPanel;

import model.Board;

/**
 * Displays level and score information.
 * 
 * @author Rylie Nelson
 * @version Spring 2013
 */

public class InfoDisplay extends JPanel implements Observer {
  
  /**
   * The default height of the InfoDisplay in pixels.
   */
  
  private static final int DEFAULT_HEIGHT = 100;
  
  /**
   * The default width of the InfoDisplay in pixels.
   */
  
  private static final int DEFAULT_WIDTH = 150;
  
  private String my_level;
  
  private int my_score;
  
  private int my_line_count;
  
  public InfoDisplay() {
    super();
    start();
    my_level = "1";
    my_score = 0;
  }
  
  private void start() {
    setPreferredSize(new Dimension(DEFAULT_WIDTH, DEFAULT_HEIGHT));
    setBorder(BorderFactory.createLineBorder(Color.WHITE));
    setBackground(Color.BLACK);
  }
  
  public void resetLineCount() {
    my_line_count = 0;
    my_level = "1";
    my_score = 0;
    repaint();
  }
  
  @Override
  public void paintComponent(final Graphics the_graphics) {
    super.paintComponent(the_graphics);
    final Graphics2D g2d = (Graphics2D) the_graphics;
    g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2d.setPaint(Color.WHITE);
    
    g2d.drawString("Current Level: " + my_level, 25, 25);
    g2d.drawString("Lines Cleared: " + my_line_count, 25, 50);
    g2d.drawString("Current Score: " + my_score, 25, 75);
  }

  @Override
  public void update(final Observable the_o, final Object the_arg) {
    if (the_arg != null) {
      my_line_count = my_line_count + (int) the_arg;
      my_level = Integer.toString(my_line_count / 10 + 1);
      my_score = my_score + ((int) the_arg * (int) the_arg);
      repaint();
    }
  }
  

}
